*****20/2/15*****

-Added "show annotated items only" search option.

-Added some pre-baked word lists to the item search. Tried a few methods of doing this. Using a regex FILTER
actually appears to offer the best performance. Using the VALUES keyword appears to have universally awful
perfomance.

-Added component type drop down menu to item search.

-Added drop down menu containing existing item lists to the export page.

*****16/2/15*****

-First pass at adding navigation. Could be made more pretty. Required several code changes to get things working,
primarily more stuff needing to be stored in the session so that people can navigate back to old search
results correctly.

-First pass at adding operations on individual search results. Right now all you can do is select items and
then remove those items. This functionality should be extended in the future to allow doing things (searching
with, exporting to Alveo) only to selected items. It's also a little ugly right now.

-Login page now displays the currently signed in API key if one exists instead of always saying you're not
logged in.

-Minor changes to various .tpls and the stylesheet to improve look.

-Added brief mention/explanation of SPARQL regexp syntax where relevant, although it might be better to create
a page as part of this app that explains the relevant parts in more detail.

*****13/2/15*****

-Started improving the appearance of the app and trying to make it look a little more like the main
Alveo website. 

-Added nav.tpl, included on all pages. Right now only visual, could be extended in the future to contain actual
navigation.

-Made alquery work in a way that's decidedly less silly. There's actually more that could be done here to
improve the way results are handled, but this is much better and should hopefully fix problems encountered
during deployment.

*****11/2/15*****

-Minor changes to HTML in some .tpls.

-Started work on creating tests for qbuilder, created a test_page.tpl to support doing as much testing as possible
without needing to actually run queries against the live database. Test assests not included on BitBucket currently.

-Some changes made to checks for formdata in qbuilder and main that were needed based on testing.

-Fixes and changes to qbuilder.num_range_filter based on testing. Added some new functionality, described in the
search page's notes.

-Implemented login system.

-Added confirmation on the home page after an item list is exported or the user is logged in. Other messages
can also be displayed by setting the key 'message' in the session to some value.

-Removed unused test page routing from main.

*****6/2/15*****

-Added searching for items based on the last set of selected participants. Currently you can select all items or
search by prompt and/or component type.

-Added export.tpl. This'll be the page used to export item lists to Alveo.
-Added export button to item results page.

-User can export item lists to Alveo by item list name.

-List of the results of the last item search are stored in the session.
-More assorted changes to session handling/dealing with beaker that were not previously obvious.

-Minor changes to participant querying. More search fields now only display on the results page if they were
actually searched.

-Created file to keep track of to do list. A few things I keep forgetting to do.
-Renamed a bunch of methods to actually adhere to convention.

*****3/2/15*****

-Started factoring query building out of main and into qbuilder.py. When this is finished, what I'm hoping is that
we'll have a function that allows us to build an entire SPARQL query with a single call to some function in qbuilder.
This would make qbuilder a pretty useful thing in its own right and would be a good step towards generalising the app
to be able to query collections other than austalk. Although that's not a particularly high priority at the moment.

-Now using beaker to keep the most recent list of participants from search results in the session data. Had to
rewrite a bunch of stuff to get this working. Also using this to store the count for the number of search results
from a query now, which let me clear up something that was kind of nasty about alquery.htmlTable.

-Added itemresults.tpl and a button to get all the items for the selected participants to the results page. 
-Renamed "results" to "presults". 
-Renamed "search" to "psearch".

